consumes:
  - application/json
definitions: {}
info:
  description: "Welcome to the otto-js (Alerts) API  documentation! otto-js is a powerful platform that offers a range of services to ensure the security, compliance, and integrity of your web applications. The api endpoints enable users to retrieve alerts and notifications generated by otto-js. The alerts endpoints include: Known Vulnerabilities, Changes to JavaScript, and Action Required."
  termsOfService: https://www.otto-js.com/terms
  title: "otto-js (Alerts) API Documentation"
  version: "2.0"
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
tags:
  - name: Site
    description: "This endpoint retrieves details about all sites added to otto-js."
  - name: File
    description: "This endpoint retrieves details about all file vulnerabilities detected by otto-js."
  - name: Behavior
    description: "This endpoint retrieves details about all changes to script behaviors detected by otto-js."
  - name: Incident
    description: "This endpoint retrieves details about all incidents that require attention detected by otto-js."
paths:
  /api/v2/accounts/{account_id}/sites:
    get:
      security:
        - { Bearer: [] }
      description: Get a list of all sites in the account.
      operationId: DevconServicesApiWeb.SiteController.index
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of site_ids that can be used in later API requests to query data specific to that site."
      tags:
        - Site
    post:
      security:
        - { Bearer: [] }
      description: Add a site to the account.
      operationId: DevconServicesApiWeb.SiteController.create
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: body
          name: body
          description: "Site Settings"
          required: true
          schema:
            type: object
            properties:
              site:
                type: object
                properties:
                  url:
                    type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of site_ids that can be used in later API requests to query data specific to that site."
      tags:
        - Site

  /api/v2/accounts/{account_id}/sites/{site_id}:
    get:
      security:
        - { Bearer: [] }
      description: Get details for a specific site.
      operationId: DevconServicesApiWeb.SiteController.show
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get info related to a specific site_id."
      tags:
        - Site

  /api/v2/accounts/{account_id}/users:
    get:
      security:
        - { Bearer: [] }
      description: Get users for an account.
      operationId: DevconServicesApiWeb.UserController.index
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of groups for the account"
      tags:
        - Users

  /api/v2/accounts/{account_id}/users/{user_id}:
    get:
      security:
        - { Bearer: [] }
      description: Get user info by id.
      operationId: DevconServicesApiWeb.UserController.show
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get user by id"
      tags:
        - Users
    put:
      security:
        - { Bearer: [] }
      description: Update user info by id.
      operationId: DevconServicesApiWeb.UserController.update
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: user_id
          required: true
          type: string
        - in: body
          name: body
          description: "User Info"
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
              name:
                type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Update user info"
      tags:
        - Users
  /api/v2/accounts/{account_id}/users/{user_id}/kick:
    delete:
      security:
        - { Bearer: [] }
      description: Delete the user from the account.
      operationId: DevconServicesApiWeb.UserController.kick
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Delete the user from the account"
      tags:
        - Users

  /api/v2/accounts/{account_id}/groups:
    get:
      security:
        - { Bearer: [] }
      description: Get groups details for a specific site.
      operationId: DevconServicesApiWeb.GroupController.index
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of groups for the account"
      tags:
        - Groups
    post:
      security:
        - { Bearer: [] }
      description: Create a new Group.
      operationId: DevconServicesApiWeb.GroupController.create
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: body
          name: body
          description: "Group"
          required: true
          schema:
            type: object
            properties:
              group:
                type: object
                properties:
                  name:
                    type: string

      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Add group to the account"
      tags:
        - Groups

  /api/v2/accounts/{account_id}/groups/{group_id}:
    put:
      security:
        - { Bearer: [] }
      description: Update a Group Name.
      operationId: DevconServicesApiWeb.GroupController.update
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: group_id
          required: true
          type: string
        - in: body
          name: body
          description: "Group"
          required: true
          schema:
            type: object
            properties:
              group:
                type: object
                properties:
                  name:
                    type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Update the Group Name"
      tags:
        - Groups
    delete:
      security:
        - { Bearer: [] }
      description: Delete a Group.
      operationId: DevconServicesApiWeb.GroupController.delete
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: group_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Delete a Group Name"
      tags:
        - Groups

  /api/v2/accounts/{account_id}/groups/{group_id}/sites/{site_id}:
    post:
      security:
        - { Bearer: [] }
      description: Get groups details for a specific site.
      operationId: DevconServicesApiWeb.GroupController.add_site
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: group_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Add a site to the group"
      tags:
        - Groups
    delete:
      security:
        - { Bearer: [] }
      description: Delete a site from the group.
      operationId: DevconServicesApiWeb.GroupController.remove_site
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: group_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Delete a site from the group"
      tags:
        - Groups

  /api/v2/accounts/{account_id}/groups/{group_id}/users/{user_id}:
    post:
      security:
        - { Bearer: [] }
      description: Add User to a group.
      operationId: DevconServicesApiWeb.GroupController.add_user
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: group_id
          required: true
          type: string
        - in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Add a user to the group"
      tags:
        - Groups
    delete:
      security:
        - { Bearer: [] }
      description: Delete a user from the group.
      operationId: DevconServicesApiWeb.GroupController.remove_user
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: group_id
          required: true
          type: string
        - in: path
          name: user_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Remmove a user from the group"
      tags:
        - Groups

  /api/v2/accounts/{account_id}/sites/{site_id}/files:
    get:
      security:
        - { Bearer: [] }
      description: Get a list of all JavaScript files with vulnerabilties.
      operationId: DevconServicesApiWeb.FileController.index
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of all JavaScript vulnerabilties."
      tags:
        - File
  /api/v2/accounts/{account_id}/sites/{site_id}/files/{file_id}:
    get:
      security:
        - { Bearer: [] }
      description: Get a file's vulnerability details.
      operationId: DevconServicesApiWeb.FileController.show
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: file_id
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a file's vulnerability details."
      tags:
        - File
  /api/v2/accounts/{account_id}/sites/{site_id}/incidents:
    get:
      security:
        - { Bearer: [] }
      description: |
        Get a list of Action Required incidents.
        **mode** param can be one of the following:
          * **quarantine**: all blocked events
          * **review**: high risk items that need review
          * **new**: All events in the last 24 hours
          * **all**: Archive of all events
      operationId: DevconServicesApiWeb.IncidentController.index
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
        - in: query
          name: mode
          required: true
          type: string
          default: review
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of Action Required incidents."
      tags:
        - Incident
  /api/v2/accounts/{account_id}/sites/{site_id}/incidents/{incident_id}:
    get:
      security:
        - { Bearer: [] }
      description: Get an incident's details.
      operationId: DevconServicesApiWeb.IncidentController.show
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: incident_id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get an incident's details."
      tags:
        - Incident
  /api/v2/accounts/{account_id}/sites/{site_id}/aggregate_incidents:
    get:
      security:
        - { Bearer: [] }
      description: |
        Get a list of Action Required incidents. Must supply **mode** and **incident_type** in the query string.
        * **mode** param can be one of the following:
          * **quarantine**: all blocked events
          * **review**: high risk items that need review
          * **all**: Archive of all events
          * **new**: All events in the last 24 hours
        * **incident_type** param can be one of the following:
          * **all**: Show all incidents
          * **file**: Show all js files with vulnerabilities
          * **network_requests**: Shows only network requests
          * **policy_violations**: All Script Policy Violations
          * **violations**: All Content Security Policy Violations
      operationId: DevconServicesApiWeb.AggregateIncidentController.index
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
        - in: query
          name: mode
          required: true
          type: string
          default: quarantine
        - in: query
          name: incident_type
          required: true
          type: string
          default: all
      produces:
        - application/json
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get a list of Action Required incidents."
      tags:
        - Incident
  /api/v2/accounts/{account_id}/sites/{site_id}/behaviors/need_review:
    get:
      security:
        - { Bearer: [] }
      description: Get a listing of any scripts under site {site_id} whose behavior has changed and could potentially be a security threat.
      operationId: DevconServicesApiWeb.BehaviorController.need_review
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: Get a listing of any scripts under site {site_id} whose behavior has changed and could potentially be a security threat.
      tags:
        - Behavior
  ? /api/v2/accounts/{account_id}/sites/{site_id}/behaviors/mark_as_reviewed/{behavior_id}
  : put:
      security:
        - { Bearer: [] }
      description: Mark a behavior that requires review as having been reviewed.
      operationId: DevconServicesApiWeb.BehaviorController.mark_as_reviewed
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: behavior_id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Mark a behavior that needed review as having been reviewed."
      tags:
        - Behavior
  /api/v2/accounts/{account_id}/sites/{site_id}/behaviors/{behavior_id}:
    get:
      security:
        - { Bearer: [] }
      description: Get details on a certain behavior belonging to a site {site_id}.
      operationId: DevconServicesApiWeb.BehaviorController.show
      parameters:
        - in: path
          name: account_id
          required: true
          type: string
        - in: path
          name: site_id
          required: true
          type: string
        - in: path
          name: behavior_id
          required: true
          type: string
      responses:
        "200":
          description: Success
        "403":
          description: Not Authorized
        "404":
          description: Not Found
      summary: "Get details on a certain behavior recorded on a site."
      tags:
        - Behavior
produces:
  - application/json
host: api.otto-js.com
schemes:
  - https
securityDefinitions:
  Bearer:
    description: "API Token must be provided via `Authorization: Bearer ` header"
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
